Doctest for matrix_divided function
===================================
The matrix function divides every number in the matrix.
If an element is not a number or every row length is not equal, it will return ValueError

Usage
=====

First: importing the function
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Basic use case:
	>>> mtx = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(mtx, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Wrong use case example 1:
	>>> mtx = [[1, 2, 3, 4], [4, 5, 6]] # WRONG!
	>>> matrix_divided(mtx, 3)
	Traceback (most recent call last):
		...
	ValueError: Each row of the matrix must have the same size

Another wrong use case example 2:
	>>> mtx = [[1, 2, 3, 4], [4, 5, 6, "oops"]] # All elements must be numbers!
	>>> matrix_divided(mtx, 3)
	Traceback (most recent call last):
		...
	ValueError: matrix must be a matrix (list of lists) of integers/floats

Wrong use case example 3:
	>>> mtx = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(mtx, 0) # div CANNOT be zero!!!
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
